name: CI

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4.1.7
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'adopt'
#
#      - name: Build with Gradle
#        run: ./gradlew build --no-daemon
#
#      - name: Upload APK artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: RoboList.apk
#          path: app/build/outputs/apk/debug/app-debug.apk
  Gradle:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: setup jdk
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Make Gradle executable
        run: chmod +x ./gradlew
      - name: Build Release APK
        run: ./gradlew assembleRelease
      - name: Releasing using Hub
        uses: kyze8439690/action-release-releaseapk@master
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          APP_FOLDER: app

#  release:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4.1.7
#
#      - name: Get latest tag
#        id: get_tag
#        run: |
#          TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
#          echo "Latest Tag: $TAG"
#          echo "::set-output name=LATEST_TAG::$TAG"
#
#      - name: Calculate next version
#        id: next_version
#        run: |
#          # Remove the 'v' from the tag (if present) and extract version numbers
#          LATEST_TAG=${{ steps.get_tag.outputs.LATEST_TAG }}
#          VERSION=${LATEST_TAG#v}
#          IFS='.' read -r MAJOR MINOR PATCH <<<"$VERSION"
#          # Increment the patch version
#          PATCH=$((PATCH+1))
#          # Form new version
#          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
#          echo "Next version: $NEW_VERSION"
#          echo "::set-output name=VERSION::$NEW_VERSION"
#
#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1
#        with:
#          tag_name: ${{ steps.next_version.outputs.VERSION }}
#          release_name: "Release ${{ steps.next_version.outputs.VERSION }}"
#          body: "Automated release with APK for version ${{ steps.next_version.outputs.VERSION }}."
#          draft: false
#          prerelease: false
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN }}
#
#      - name: Upload APK to Release
#        uses: actions/upload-release-asset@v1
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: app/build/outputs/apk/release/app-release.apk
#          asset_name: RoboList-${{ steps.next_version.outputs.VERSION }}.apk
#          asset_content_type: application/vnd.android.package-archive

